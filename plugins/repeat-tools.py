from utils import (
    Cmd, helplist,
    Module, Command, Argument as Arg,
    pre, code, b,
    get_group
)
import asyncio
from pyrogram import errors, types

cmd = Cmd(get_group())

helplist.add_module(
    Module(
        'RepeatTools',
        author='@RimMirK',
        version='1.0.1',
        description="–ü–æ–≤—Ç–æ—Ä—è–µ—Ç –∑–∞–¥–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —Ä–∞–∑ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∑–∞–¥–¥–µ—Ä–∂–∫–æ–π."
    ).add_command(
        Command(['repeat', 'rep'],
                [Arg('—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑'), Arg('—Å –∫–∞–∫–æ–π –∑–∞–¥–¥–µ—Ä–∂–∫–æ–π (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)'), Arg('—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')],
                '–ù–∞—á–∞—Ç—å –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ', 
    )).add_command(
        Command(
            ["norepeat", 'stoprepeat', 'norep', 'stoprep'], [Arg('–Ω–æ–º–µ—Ä –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è')], 
            '–ü—Ä–µ–∫—Ä–∞—â–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ'
    ))
)


@cmd(["repeat", 'rep'])
async def repeat(app, msg: types.Message):

    try:
        rep = app.st.get('rep', [])
        n = max(rep) + 1 if rep else 1
        rep.append(n)
        app.st.rep = rep
        
        _, count, delay, *text = msg.command
        text = ' '.join(text)
        await msg.edit(
            f"–ù–∞—á–∏–Ω–∞—é –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {code(n)}"
            f"{pre(text)} {b(count)} —Ä–∞–∑ —Å –∑–∞–¥–¥–µ—Ä–∂–∫–æ–π –≤ {b(delay)} —Å–µ–∫.\n\n"
            f"–î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:{pre(msg.text, 'python')}"
        )
        for _ in range(int(count)):
            if n not in app.st.get('rep', []): 
                await app.send_message(msg.chat.id, f"‚õî –ü–µ—Ä–µ—Å—Ç–∞–ª –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {b(n)}")
                break
            try: await app.send_message(msg.chat.id, text)
            except errors.flood_420.FloodWait as s:
                try: await asyncio.sleep(s)
                except: await asyncio.sleep(1)
                await app.send_message(msg.chat.id, text)
            await asyncio.sleep(float(delay))
    except ValueError:
        from config import PREFIX
        await msg.edit(
            f"<emoji id=5300877490313509761>üìõ</emoji> –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö!\n"
            f"–ò—Å–ø–æ–ª—å–∑—É–π {code(PREFIX + msg.command[0])} {b('[—Å–∫–æ–ª—å–∫–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π] [—Å –∫–∞–∫–æ–π –∑–∞–¥–¥–µ—Ä–∂–∫–∞–π (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)] [—Ç–µ–∫—Å—Ç]')} (–±–µ–∑ —Å–∫–æ–±–æ–∫)"
        )

@cmd(["norepeat", 'stoprepeat', 'norep', 'stoprep'])
async def norepeat(app, msg):
    try:
        _, n = msg.text.split()
        if n == '*':
            app.st.rep = []
        else:
            app.st.get('rep', []).remove(int(n))
        await msg.edit("–æ–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (—Å–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è)")
    except:
        await msg.edit('<emoji id="5300877490313509761">üìõ</emoji> error')
